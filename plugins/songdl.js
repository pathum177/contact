const { cmd } = require('../lib/command');
const { ytsearch } = require('@dark-yasiya/yt-dl.js');
const axios = require('axios');

const userSession = {}; // per-user session to store search results

cmd({
    pattern: "song",
    react: "üé∂",
    desc: "Download YouTube song as voice note + document",
    category: "main",
    filename: __filename
}, async (conn, mek, m, { from, q, reply }) => {
    try {
        // Step 1: initial search
        if (q) {
            const yt = await ytsearch(q);
            if (!yt.results || yt.results.length === 0) return reply("‚ùå No results found!");

            const topResults = yt.results.slice(0, 5); // show top 5
            let listMsg = "*üîé Select a song by number:*\n\n";
            topResults.forEach((song, i) => listMsg += `${i + 1}. ${song.title}\n`);

            userSession[from] = topResults; // store results for this user
            return reply(listMsg);
        }

        // Step 2: user replied with number
        const choice = parseInt(m.text);
        if (!userSession[from] || isNaN(choice) || choice < 1 || choice > userSession[from].length) 
            return reply("‚ùå Invalid number. Please reply with the number of the song you want.");

        const yts = userSession[from][choice - 1];
        delete userSession[from]; // clear session

        const apiUrl = `https://apis.davidcyriltech.my.id/youtube/mp3?url=${encodeURIComponent(yts.url)}`;
        const response = await axios.get(apiUrl);
        const data = response.data;

        if (!data.success || !data.result.downloadUrl) return reply("‚ùå Failed to fetch audio.");

        const ytmsg = `*üéµ LUXALGO SONG DOWNLOADER üéµ*

‚ï≠‚îÅ‚îÅ‚ùê‚îÅ‚™º
‚îáüìÑ *Title* - ${yts.title}
‚îá‚è±Ô∏è *Duration* - ${yts.timestamp}
‚îáüìå *Views* - ${yts.views}
‚îáüë§ *Author* - ${yts.author.name}
‚îáüîó *Link* - ${yts.url}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óè‚óè‚ñ∫

> *¬© P·¥è·¥°·¥á Ä·¥á·¥Ö B è  ü·¥úx·¥Ä ü…¢·¥è x·¥Ö ‚ô°*`;

        // Send song details
        await conn.sendMessage(from, { image: { url: data.result.image || '' }, caption: ytmsg }, { quoted: mek });

        // Send voice note
        await conn.sendMessage(from, { audio: { url: data.result.downloadUrl }, mimetype: "audio/mpeg", ptt: true }, { quoted: mek });

        // Send as document
        await conn.sendMessage(from, { 
            document: { url: data.result.downloadUrl }, 
            mimetype: "audio/mpeg", 
            fileName: `${yts.title}.mp3`, 
            caption: ytmsg 
        }, { quoted: mek });

    } catch(e) {
        console.log(e);
        reply("‚ùå An error occurred. Please try again later.");
    }
});

