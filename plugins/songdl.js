const { cmd } = require('../lib/command');
const yts = require('yt-search');
const ytdl = require('@distube/ytdl-core');

cmd({
    pattern: 'song7',
    react: 'üé∂',
    desc: 'Download MP3 from YouTube',
    category: 'main',
    filename: __filename
}, async (conn, m, msg, { q, reply }) => {
    try {
        if (!q) return reply('‚ùå *‡∂ú‡∑ì‡∂≠‡∂∫‡∑ö ‡∂±‡∂∏ ‡∑Ñ‡∑ù YouTube link ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±.*');

        // üîç Search YouTube
        const search = await yts(q);
        if (!search || !search.videos.length) return reply('‚ùå *‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑Ñ‡∂∏‡∑î ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∫.*');

        const video = search.videos[0];
        const url = video.url;

        // üìù Fancy caption
        let caption = `üéµ *LUXALGO DOWNLOADER*\n\n` +
                      `üìå *Title:* ${video.title}\n` +
                      `üìÄ *Author:* ${video.author.name}\n` +
                      `‚è± *Duration:* ${video.timestamp}\n` +
                      `üëÄ *Views:* ${video.views.toLocaleString()}\n` +
                      `üìÖ *Uploaded:* ${video.ago}\n` +
                      `üîó *URL:* ${url}\n\n` +
                      `‚¨áÔ∏è *Downloading audio...‡∑¥*`;

        await conn.sendMessage(m.chat, {
            image: { url: video.thumbnail },
            caption
        }, { quoted: m });

        // üì• Download to Buffer instead of file
        const chunks = [];
        await new Promise((resolve, reject) => {
            ytdl(url, {
                filter: 'audioonly',
                quality: 'highestaudio',
                highWaterMark: 1 << 25 // Prevents stream cut-off
            })
            .on('data', chunk => chunks.push(chunk))
            .on('end', resolve)
            .on('error', reject);
        });

        const audioBuffer = Buffer.concat(chunks);

        // üì§ Send audio
        await conn.sendMessage(m.chat, {
            audio: audioBuffer,
            mimetype: 'audio/mp4',
            ptt: false
        }, { quoted: m });

    } catch (err) {
        console.error('Song Download Error:', err);
        reply('‚ùå Error downloading song.');
    }
});
